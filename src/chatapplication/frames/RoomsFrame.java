/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatapplication.frames;

import chatapplication.database_connection.DatabaseManager;
import chatapplication.main.Client;
import chatapplication.rooms.Room;
import chatapplication.rooms.RoomManager;
import com.mysql.jdbc.PreparedStatement;

import java.awt.Dimension;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDesktopPane;

/**
 *
 * @author root
 */
public class RoomsFrame extends javax.swing.JInternalFrame {

    private RoomManager roomManager;
    private JDesktopPane desktop;
    private AddNewRoom addroom;
    private Client manager;
    private DatabaseManager database;
    private RoomFrame roomFrame;
    private DefaultListModel cbb = new DefaultListModel();

    
    public RoomsFrame(JDesktopPane desktop, Client manager) {
        this.manager = manager;
        database = manager.Database();
        this.desktop = desktop;
        initComponents();
        roomManager = new RoomManager();
        createRooms();
    }

    public void createRooms() {
        rooms.removeAll();
        rooms.setModel(createRoomList());
    }

    public DefaultListModel createRoomList() {
        //model = new DefaultListModel<>();
        cbb = new DefaultListModel();
        try {
            int i=0;
            PreparedStatement id = (PreparedStatement) database.connection.prepareStatement("select * from rooms inner join room_users on rooms.id = room_users.id_room where room_users.id_user = " +  database.user.getId());
            try {
                ResultSet rs = id.executeQuery();
                while (rs.next()){
                    //Map.of("id", rs.getInt("id"), "name", rs.getString("room_name"));
                    cbb.addElement(rs.getString(2));
                    roomManager.addRoom(i, rs.getInt(1), rs.getString(2));
                    i++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(RoomsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (SQLException ex) {
            Logger.getLogger(RoomsFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return cbb;
    }

    /**e
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        rooms = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setClosable(true);

        rooms.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 6", "Item 7", "Item 8", "Item 9" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        rooms.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                roomsMouseMoved(evt);
            }
        });
        rooms.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(rooms);

        jButton1.setText("ADD NEW ROOM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void roomsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomsMouseClicked
        int selectRoom = rooms.getSelectedIndex();
        //JOptionPane.showMessageDialog(this,room);
        if (selectRoom>=0) {
            if (roomFrame != null) {
                if (!roomFrame.isVisible()) {
                    roomFrame = new RoomFrame(roomManager.getRoomBySlt(selectRoom), manager.Database(), manager.getClient(), desktop);
                    try {
                        Room room = roomManager.getRoomBySlt(selectRoom);
                        String nameRoom = room.getRoom();
                        System.out.println(nameRoom);
                        //manager.getClient().userAdded("roomadd", manager.Database().user.getUsername(), room);
                    } catch (Exception ex) {
                        Logger.getLogger(RoomsFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Dimension sourceSize = this.desktop.getSize();
                    roomFrame.setSize(sourceSize);
                    roomFrame.setVisible(true);
                    desktop.add(roomFrame);
                    setVisible(false);
                }
            } else {
                roomFrame = new RoomFrame(roomManager.getRoomBySlt(selectRoom), manager.Database(), manager.getClient(), desktop);
                try {
                        Room room = roomManager.getRoomBySlt(selectRoom);
                        String nameRoom = room.getRoom();
                        System.out.println(nameRoom);
                    //manager.getClient().userAdded("roomadd", manager.Database().user.getUsername(), room);
                } catch (Exception ex) {
                    Logger.getLogger(RoomsFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                Dimension sourceSize = this.desktop.getSize();
                roomFrame.setSize(sourceSize);
                roomFrame.setVisible(true);
                desktop.add(roomFrame);
                setVisible(false);
            }
        }
    }//GEN-LAST:event_roomsMouseClicked

    private void roomsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomsMouseMoved
    }//GEN-LAST:event_roomsMouseMoved

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        
        addroom = new AddNewRoom(database, 0); 
        addroom.setVisible(true);
        desktop.add(addroom);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed
    public RoomFrame getRoom() {
        return roomFrame;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> rooms;
    // End of variables declaration//GEN-END:variables
}